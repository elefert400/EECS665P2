Terminals unused in grammar

    "newline"
    DOT


Grammar

    0 $accept: program "end of file"

    1 program: declList

    2 declList: declList decl
    3         | %empty

    4 decl: varDecl
    5     | fnDecl

    6 varDecl: type id SEMICOLON

    7 fnDecl: type id formals fnBody

    8 formals: LPAREN RPAREN
    9        | LPAREN formalsList RPAREN

   10 formalsList: formalDecl
   11            | formalDecl COMMA formalsList

   12 formalDecl: type id

   13 fnBody: LCURLY declList stmtList RCURLY

   14 stmtList: stmtList stmt
   15         | %empty

   16 stmt: assignExp SEMICOLON
   17     | loc CROSSCROSS SEMICOLON
   18     | loc DASHDASH SEMICOLON
   19     | READ loc SEMICOLON
   20     | WRITE exp SEMICOLON
   21     | IF LPAREN exp RPAREN LCURLY declList stmtList RCURLY
   22     | IF LPAREN exp RPAREN LCURLY declList stmtList RCURLY ELSE LCURLY declList stmtList RCURLY
   23     | WHILE LPAREN exp RPAREN LCURLY declList stmtList RCURLY
   24     | RETURN exp SEMICOLON
   25     | RETURN SEMICOLON
   26     | fncall SEMICOLON

   27 assignExp: loc ASSIGN exp

   28 exp: exp CROSS exp
   29    | exp DASH exp
   30    | exp STAR exp
   31    | exp SLASH exp
   32    | NOT exp
   33    | exp AND exp
   34    | exp OR exp
   35    | exp EQUALS exp
   36    | exp NOTEQUALS exp
   37    | exp LESS exp
   38    | exp GREATER exp
   39    | exp LESSEQ exp
   40    | exp GREATEREQ exp
   41    | DASH term
   42    | term

   43 term: loc
   44     | INTLITERAL
   45     | STRINGLITERAL
   46     | TRUE
   47     | FALSE
   48     | LPAREN exp RPAREN
   49     | fncall

   50 fncall: id LPAREN RPAREN
   51       | id LPAREN actualList RPAREN

   52 actualList: exp
   53           | actualList COMMA exp

   54 type: primtype indirect

   55 primtype: INT
   56         | BOOL
   57         | VOID

   58 indirect: indirect DEREF
   59         | %empty

   60 loc: id
   61    | DEREF loc

   62 id: ID


Terminals, with rules where they appear

    "end of file" (0) 0
    error (256)
    "newline" <tokenValue> (258)
    BOOL <tokenValue> (259) 56
    INT <tokenValue> (260) 55
    VOID <tokenValue> (261) 57
    TRUE <tokenValue> (262) 46
    FALSE <tokenValue> (263) 47
    IF <tokenValue> (264) 21 22
    ELSE <tokenValue> (265) 22
    WHILE <tokenValue> (266) 23
    RETURN <tokenValue> (267) 24 25
    ID <idTokenValue> (268) 62
    INTLITERAL <intTokenValue> (269) 44
    STRINGLITERAL <strTokenValue> (270) 45
    DEREF <tokenValue> (271) 58 61
    LCURLY <tokenValue> (272) 13 21 22 23
    RCURLY <tokenValue> (273) 13 21 22 23
    LPAREN <tokenValue> (274) 8 9 21 22 23 48 50 51
    RPAREN <tokenValue> (275) 8 9 21 22 23 48 50 51
    SEMICOLON <tokenValue> (276) 6 16 17 18 19 20 24 25 26
    COMMA <tokenValue> (277) 11 53
    DOT <tokenValue> (278)
    WRITE <tokenValue> (279) 20
    READ <tokenValue> (280) 19
    CROSSCROSS <tokenValue> (281) 17
    DASHDASH <tokenValue> (282) 18
    CROSS <tokenValue> (283) 28
    DASH <tokenValue> (284) 29 41
    STAR <tokenValue> (285) 30
    SLASH <tokenValue> (286) 31
    NOT <tokenValue> (287) 32
    AND <tokenValue> (288) 33
    OR <tokenValue> (289) 34
    EQUALS <tokenValue> (290) 35
    NOTEQUALS <tokenValue> (291) 36
    LESS <tokenValue> (292) 37
    GREATER <tokenValue> (293) 38
    LESSEQ <tokenValue> (294) 39
    GREATEREQ <tokenValue> (295) 40
    ASSIGN <tokenValue> (296) 27


Nonterminals, with rules where they appear

    $accept (42)
        on left: 0
    program <programNode> (43)
        on left: 1
        on right: 0
    declList <declList> (44)
        on left: 2 3
        on right: 1 2 13 21 22 23
    decl <declNode> (45)
        on left: 4 5
        on right: 2
    varDecl <varDeclNode> (46)
        on left: 6
        on right: 4
    fnDecl <fnDecl> (47)
        on left: 7
        on right: 5
    formals <formalsType> (48)
        on left: 8 9
        on right: 7
    formalsList <formalsList> (49)
        on left: 10 11
        on right: 9 11
    formalDecl <formalDecl> (50)
        on left: 12
        on right: 10 11
    fnBody <fnBody> (51)
        on left: 13
        on right: 7
    stmtList <stmtList> (52)
        on left: 14 15
        on right: 13 14 21 22 23
    stmt <stmtNode> (53)
        on left: 16 17 18 19 20 21 22 23 24 25 26
        on right: 14
    assignExp <assignNode> (54)
        on left: 27
        on right: 16
    exp <exp> (55)
        on left: 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42
        on right: 20 21 22 23 24 27 28 29 30 31 32 33 34 35 36 37 38 39 40 48 52 53
    term <exp> (56)
        on left: 43 44 45 46 47 48 49
        on right: 41 42
    fncall <callNode> (57)
        on left: 50 51
        on right: 26 49
    actualList <expList> (58)
        on left: 52 53
        on right: 51 53
    type <typeNode> (59)
        on left: 54
        on right: 6 7 12
    primtype <typeNode> (60)
        on left: 55 56 57
        on right: 54
    indirect <counterTrans> (61)
        on left: 58 59
        on right: 54 58
    loc <exp> (62)
        on left: 60 61
        on right: 17 18 19 27 43 61
    id <idNode> (63)
        on left: 62
        on right: 6 7 12 50 51 60


State 0

    0 $accept: . program "end of file"

    $default  reduce using rule 3 (declList)

    program   go to state 1
    declList  go to state 2


State 1

    0 $accept: program . "end of file"

    "end of file"  shift, and go to state 3


State 2

    1 program: declList .
    2 declList: declList . decl

    BOOL  shift, and go to state 4
    INT   shift, and go to state 5
    VOID  shift, and go to state 6

    $default  reduce using rule 1 (program)

    decl      go to state 7
    varDecl   go to state 8
    fnDecl    go to state 9
    type      go to state 10
    primtype  go to state 11


State 3

    0 $accept: program "end of file" .

    $default  accept


State 4

   56 primtype: BOOL .

    $default  reduce using rule 56 (primtype)


State 5

   55 primtype: INT .

    $default  reduce using rule 55 (primtype)


State 6

   57 primtype: VOID .

    $default  reduce using rule 57 (primtype)


State 7

    2 declList: declList decl .

    $default  reduce using rule 2 (declList)


State 8

    4 decl: varDecl .

    $default  reduce using rule 4 (decl)


State 9

    5 decl: fnDecl .

    $default  reduce using rule 5 (decl)


State 10

    6 varDecl: type . id SEMICOLON
    7 fnDecl: type . id formals fnBody

    ID  shift, and go to state 12

    id  go to state 13


State 11

   54 type: primtype . indirect

    $default  reduce using rule 59 (indirect)

    indirect  go to state 14


State 12

   62 id: ID .

    $default  reduce using rule 62 (id)


State 13

    6 varDecl: type id . SEMICOLON
    7 fnDecl: type id . formals fnBody

    LPAREN     shift, and go to state 15
    SEMICOLON  shift, and go to state 16

    formals  go to state 17


State 14

   54 type: primtype indirect .
   58 indirect: indirect . DEREF

    DEREF  shift, and go to state 18

    $default  reduce using rule 54 (type)


State 15

    8 formals: LPAREN . RPAREN
    9        | LPAREN . formalsList RPAREN

    BOOL    shift, and go to state 4
    INT     shift, and go to state 5
    VOID    shift, and go to state 6
    RPAREN  shift, and go to state 19

    formalsList  go to state 20
    formalDecl   go to state 21
    type         go to state 22
    primtype     go to state 11


State 16

    6 varDecl: type id SEMICOLON .

    $default  reduce using rule 6 (varDecl)


State 17

    7 fnDecl: type id formals . fnBody

    LCURLY  shift, and go to state 23

    fnBody  go to state 24


State 18

   58 indirect: indirect DEREF .

    $default  reduce using rule 58 (indirect)


State 19

    8 formals: LPAREN RPAREN .

    $default  reduce using rule 8 (formals)


State 20

    9 formals: LPAREN formalsList . RPAREN

    RPAREN  shift, and go to state 25


State 21

   10 formalsList: formalDecl .
   11            | formalDecl . COMMA formalsList

    COMMA  shift, and go to state 26

    $default  reduce using rule 10 (formalsList)


State 22

   12 formalDecl: type . id

    ID  shift, and go to state 12

    id  go to state 27


State 23

   13 fnBody: LCURLY . declList stmtList RCURLY

    $default  reduce using rule 3 (declList)

    declList  go to state 28


State 24

    7 fnDecl: type id formals fnBody .

    $default  reduce using rule 7 (fnDecl)


State 25

    9 formals: LPAREN formalsList RPAREN .

    $default  reduce using rule 9 (formals)


State 26

   11 formalsList: formalDecl COMMA . formalsList

    BOOL  shift, and go to state 4
    INT   shift, and go to state 5
    VOID  shift, and go to state 6

    formalsList  go to state 29
    formalDecl   go to state 21
    type         go to state 22
    primtype     go to state 11


State 27

   12 formalDecl: type id .

    $default  reduce using rule 12 (formalDecl)


State 28

    2 declList: declList . decl
   13 fnBody: LCURLY declList . stmtList RCURLY

    BOOL  shift, and go to state 4
    INT   shift, and go to state 5
    VOID  shift, and go to state 6

    $default  reduce using rule 15 (stmtList)

    decl      go to state 7
    varDecl   go to state 8
    fnDecl    go to state 9
    stmtList  go to state 30
    type      go to state 10
    primtype  go to state 11


State 29

   11 formalsList: formalDecl COMMA formalsList .

    $default  reduce using rule 11 (formalsList)


State 30

   13 fnBody: LCURLY declList stmtList . RCURLY
   14 stmtList: stmtList . stmt

    IF      shift, and go to state 31
    WHILE   shift, and go to state 32
    RETURN  shift, and go to state 33
    ID      shift, and go to state 12
    DEREF   shift, and go to state 34
    RCURLY  shift, and go to state 35
    WRITE   shift, and go to state 36
    READ    shift, and go to state 37

    stmt       go to state 38
    assignExp  go to state 39
    fncall     go to state 40
    loc        go to state 41
    id         go to state 42


State 31

   21 stmt: IF . LPAREN exp RPAREN LCURLY declList stmtList RCURLY
   22     | IF . LPAREN exp RPAREN LCURLY declList stmtList RCURLY ELSE LCURLY declList stmtList RCURLY

    LPAREN  shift, and go to state 43


State 32

   23 stmt: WHILE . LPAREN exp RPAREN LCURLY declList stmtList RCURLY

    LPAREN  shift, and go to state 44


State 33

   24 stmt: RETURN . exp SEMICOLON
   25     | RETURN . SEMICOLON

    TRUE           shift, and go to state 45
    FALSE          shift, and go to state 46
    ID             shift, and go to state 12
    INTLITERAL     shift, and go to state 47
    STRINGLITERAL  shift, and go to state 48
    DEREF          shift, and go to state 34
    LPAREN         shift, and go to state 49
    SEMICOLON      shift, and go to state 50
    DASH           shift, and go to state 51
    NOT            shift, and go to state 52

    exp     go to state 53
    term    go to state 54
    fncall  go to state 55
    loc     go to state 56
    id      go to state 42


State 34

   61 loc: DEREF . loc

    ID     shift, and go to state 12
    DEREF  shift, and go to state 34

    loc  go to state 57
    id   go to state 58


State 35

   13 fnBody: LCURLY declList stmtList RCURLY .

    $default  reduce using rule 13 (fnBody)


State 36

   20 stmt: WRITE . exp SEMICOLON

    TRUE           shift, and go to state 45
    FALSE          shift, and go to state 46
    ID             shift, and go to state 12
    INTLITERAL     shift, and go to state 47
    STRINGLITERAL  shift, and go to state 48
    DEREF          shift, and go to state 34
    LPAREN         shift, and go to state 49
    DASH           shift, and go to state 51
    NOT            shift, and go to state 52

    exp     go to state 59
    term    go to state 54
    fncall  go to state 55
    loc     go to state 56
    id      go to state 42


State 37

   19 stmt: READ . loc SEMICOLON

    ID     shift, and go to state 12
    DEREF  shift, and go to state 34

    loc  go to state 60
    id   go to state 58


State 38

   14 stmtList: stmtList stmt .

    $default  reduce using rule 14 (stmtList)


State 39

   16 stmt: assignExp . SEMICOLON

    SEMICOLON  shift, and go to state 61


State 40

   26 stmt: fncall . SEMICOLON

    SEMICOLON  shift, and go to state 62


State 41

   17 stmt: loc . CROSSCROSS SEMICOLON
   18     | loc . DASHDASH SEMICOLON
   27 assignExp: loc . ASSIGN exp

    CROSSCROSS  shift, and go to state 63
    DASHDASH    shift, and go to state 64
    ASSIGN      shift, and go to state 65


State 42

   50 fncall: id . LPAREN RPAREN
   51       | id . LPAREN actualList RPAREN
   60 loc: id .

    LPAREN  shift, and go to state 66

    $default  reduce using rule 60 (loc)


State 43

   21 stmt: IF LPAREN . exp RPAREN LCURLY declList stmtList RCURLY
   22     | IF LPAREN . exp RPAREN LCURLY declList stmtList RCURLY ELSE LCURLY declList stmtList RCURLY

    TRUE           shift, and go to state 45
    FALSE          shift, and go to state 46
    ID             shift, and go to state 12
    INTLITERAL     shift, and go to state 47
    STRINGLITERAL  shift, and go to state 48
    DEREF          shift, and go to state 34
    LPAREN         shift, and go to state 49
    DASH           shift, and go to state 51
    NOT            shift, and go to state 52

    exp     go to state 67
    term    go to state 54
    fncall  go to state 55
    loc     go to state 56
    id      go to state 42


State 44

   23 stmt: WHILE LPAREN . exp RPAREN LCURLY declList stmtList RCURLY

    TRUE           shift, and go to state 45
    FALSE          shift, and go to state 46
    ID             shift, and go to state 12
    INTLITERAL     shift, and go to state 47
    STRINGLITERAL  shift, and go to state 48
    DEREF          shift, and go to state 34
    LPAREN         shift, and go to state 49
    DASH           shift, and go to state 51
    NOT            shift, and go to state 52

    exp     go to state 68
    term    go to state 54
    fncall  go to state 55
    loc     go to state 56
    id      go to state 42


State 45

   46 term: TRUE .

    $default  reduce using rule 46 (term)


State 46

   47 term: FALSE .

    $default  reduce using rule 47 (term)


State 47

   44 term: INTLITERAL .

    $default  reduce using rule 44 (term)


State 48

   45 term: STRINGLITERAL .

    $default  reduce using rule 45 (term)


State 49

   48 term: LPAREN . exp RPAREN

    TRUE           shift, and go to state 45
    FALSE          shift, and go to state 46
    ID             shift, and go to state 12
    INTLITERAL     shift, and go to state 47
    STRINGLITERAL  shift, and go to state 48
    DEREF          shift, and go to state 34
    LPAREN         shift, and go to state 49
    DASH           shift, and go to state 51
    NOT            shift, and go to state 52

    exp     go to state 69
    term    go to state 54
    fncall  go to state 55
    loc     go to state 56
    id      go to state 42


State 50

   25 stmt: RETURN SEMICOLON .

    $default  reduce using rule 25 (stmt)


State 51

   41 exp: DASH . term

    TRUE           shift, and go to state 45
    FALSE          shift, and go to state 46
    ID             shift, and go to state 12
    INTLITERAL     shift, and go to state 47
    STRINGLITERAL  shift, and go to state 48
    DEREF          shift, and go to state 34
    LPAREN         shift, and go to state 49

    term    go to state 70
    fncall  go to state 55
    loc     go to state 56
    id      go to state 42


State 52

   32 exp: NOT . exp

    TRUE           shift, and go to state 45
    FALSE          shift, and go to state 46
    ID             shift, and go to state 12
    INTLITERAL     shift, and go to state 47
    STRINGLITERAL  shift, and go to state 48
    DEREF          shift, and go to state 34
    LPAREN         shift, and go to state 49
    DASH           shift, and go to state 51
    NOT            shift, and go to state 52

    exp     go to state 71
    term    go to state 54
    fncall  go to state 55
    loc     go to state 56
    id      go to state 42


State 53

   24 stmt: RETURN exp . SEMICOLON
   28 exp: exp . CROSS exp
   29    | exp . DASH exp
   30    | exp . STAR exp
   31    | exp . SLASH exp
   33    | exp . AND exp
   34    | exp . OR exp
   35    | exp . EQUALS exp
   36    | exp . NOTEQUALS exp
   37    | exp . LESS exp
   38    | exp . GREATER exp
   39    | exp . LESSEQ exp
   40    | exp . GREATEREQ exp

    SEMICOLON  shift, and go to state 72
    CROSS      shift, and go to state 73
    DASH       shift, and go to state 74
    STAR       shift, and go to state 75
    SLASH      shift, and go to state 76
    AND        shift, and go to state 77
    OR         shift, and go to state 78
    EQUALS     shift, and go to state 79
    NOTEQUALS  shift, and go to state 80
    LESS       shift, and go to state 81
    GREATER    shift, and go to state 82
    LESSEQ     shift, and go to state 83
    GREATEREQ  shift, and go to state 84


State 54

   42 exp: term .

    $default  reduce using rule 42 (exp)


State 55

   49 term: fncall .

    $default  reduce using rule 49 (term)


State 56

   43 term: loc .

    $default  reduce using rule 43 (term)


State 57

   61 loc: DEREF loc .

    $default  reduce using rule 61 (loc)


State 58

   60 loc: id .

    $default  reduce using rule 60 (loc)


State 59

   20 stmt: WRITE exp . SEMICOLON
   28 exp: exp . CROSS exp
   29    | exp . DASH exp
   30    | exp . STAR exp
   31    | exp . SLASH exp
   33    | exp . AND exp
   34    | exp . OR exp
   35    | exp . EQUALS exp
   36    | exp . NOTEQUALS exp
   37    | exp . LESS exp
   38    | exp . GREATER exp
   39    | exp . LESSEQ exp
   40    | exp . GREATEREQ exp

    SEMICOLON  shift, and go to state 85
    CROSS      shift, and go to state 73
    DASH       shift, and go to state 74
    STAR       shift, and go to state 75
    SLASH      shift, and go to state 76
    AND        shift, and go to state 77
    OR         shift, and go to state 78
    EQUALS     shift, and go to state 79
    NOTEQUALS  shift, and go to state 80
    LESS       shift, and go to state 81
    GREATER    shift, and go to state 82
    LESSEQ     shift, and go to state 83
    GREATEREQ  shift, and go to state 84


State 60

   19 stmt: READ loc . SEMICOLON

    SEMICOLON  shift, and go to state 86


State 61

   16 stmt: assignExp SEMICOLON .

    $default  reduce using rule 16 (stmt)


State 62

   26 stmt: fncall SEMICOLON .

    $default  reduce using rule 26 (stmt)


State 63

   17 stmt: loc CROSSCROSS . SEMICOLON

    SEMICOLON  shift, and go to state 87


State 64

   18 stmt: loc DASHDASH . SEMICOLON

    SEMICOLON  shift, and go to state 88


State 65

   27 assignExp: loc ASSIGN . exp

    TRUE           shift, and go to state 45
    FALSE          shift, and go to state 46
    ID             shift, and go to state 12
    INTLITERAL     shift, and go to state 47
    STRINGLITERAL  shift, and go to state 48
    DEREF          shift, and go to state 34
    LPAREN         shift, and go to state 49
    DASH           shift, and go to state 51
    NOT            shift, and go to state 52

    exp     go to state 89
    term    go to state 54
    fncall  go to state 55
    loc     go to state 56
    id      go to state 42


State 66

   50 fncall: id LPAREN . RPAREN
   51       | id LPAREN . actualList RPAREN

    TRUE           shift, and go to state 45
    FALSE          shift, and go to state 46
    ID             shift, and go to state 12
    INTLITERAL     shift, and go to state 47
    STRINGLITERAL  shift, and go to state 48
    DEREF          shift, and go to state 34
    LPAREN         shift, and go to state 49
    RPAREN         shift, and go to state 90
    DASH           shift, and go to state 51
    NOT            shift, and go to state 52

    exp         go to state 91
    term        go to state 54
    fncall      go to state 55
    actualList  go to state 92
    loc         go to state 56
    id          go to state 42


State 67

   21 stmt: IF LPAREN exp . RPAREN LCURLY declList stmtList RCURLY
   22     | IF LPAREN exp . RPAREN LCURLY declList stmtList RCURLY ELSE LCURLY declList stmtList RCURLY
   28 exp: exp . CROSS exp
   29    | exp . DASH exp
   30    | exp . STAR exp
   31    | exp . SLASH exp
   33    | exp . AND exp
   34    | exp . OR exp
   35    | exp . EQUALS exp
   36    | exp . NOTEQUALS exp
   37    | exp . LESS exp
   38    | exp . GREATER exp
   39    | exp . LESSEQ exp
   40    | exp . GREATEREQ exp

    RPAREN     shift, and go to state 93
    CROSS      shift, and go to state 73
    DASH       shift, and go to state 74
    STAR       shift, and go to state 75
    SLASH      shift, and go to state 76
    AND        shift, and go to state 77
    OR         shift, and go to state 78
    EQUALS     shift, and go to state 79
    NOTEQUALS  shift, and go to state 80
    LESS       shift, and go to state 81
    GREATER    shift, and go to state 82
    LESSEQ     shift, and go to state 83
    GREATEREQ  shift, and go to state 84


State 68

   23 stmt: WHILE LPAREN exp . RPAREN LCURLY declList stmtList RCURLY
   28 exp: exp . CROSS exp
   29    | exp . DASH exp
   30    | exp . STAR exp
   31    | exp . SLASH exp
   33    | exp . AND exp
   34    | exp . OR exp
   35    | exp . EQUALS exp
   36    | exp . NOTEQUALS exp
   37    | exp . LESS exp
   38    | exp . GREATER exp
   39    | exp . LESSEQ exp
   40    | exp . GREATEREQ exp

    RPAREN     shift, and go to state 94
    CROSS      shift, and go to state 73
    DASH       shift, and go to state 74
    STAR       shift, and go to state 75
    SLASH      shift, and go to state 76
    AND        shift, and go to state 77
    OR         shift, and go to state 78
    EQUALS     shift, and go to state 79
    NOTEQUALS  shift, and go to state 80
    LESS       shift, and go to state 81
    GREATER    shift, and go to state 82
    LESSEQ     shift, and go to state 83
    GREATEREQ  shift, and go to state 84


State 69

   28 exp: exp . CROSS exp
   29    | exp . DASH exp
   30    | exp . STAR exp
   31    | exp . SLASH exp
   33    | exp . AND exp
   34    | exp . OR exp
   35    | exp . EQUALS exp
   36    | exp . NOTEQUALS exp
   37    | exp . LESS exp
   38    | exp . GREATER exp
   39    | exp . LESSEQ exp
   40    | exp . GREATEREQ exp
   48 term: LPAREN exp . RPAREN

    RPAREN     shift, and go to state 95
    CROSS      shift, and go to state 73
    DASH       shift, and go to state 74
    STAR       shift, and go to state 75
    SLASH      shift, and go to state 76
    AND        shift, and go to state 77
    OR         shift, and go to state 78
    EQUALS     shift, and go to state 79
    NOTEQUALS  shift, and go to state 80
    LESS       shift, and go to state 81
    GREATER    shift, and go to state 82
    LESSEQ     shift, and go to state 83
    GREATEREQ  shift, and go to state 84


State 70

   41 exp: DASH term .

    $default  reduce using rule 41 (exp)


State 71

   28 exp: exp . CROSS exp
   29    | exp . DASH exp
   30    | exp . STAR exp
   31    | exp . SLASH exp
   32    | NOT exp .
   33    | exp . AND exp
   34    | exp . OR exp
   35    | exp . EQUALS exp
   36    | exp . NOTEQUALS exp
   37    | exp . LESS exp
   38    | exp . GREATER exp
   39    | exp . LESSEQ exp
   40    | exp . GREATEREQ exp

    $default  reduce using rule 32 (exp)


State 72

   24 stmt: RETURN exp SEMICOLON .

    $default  reduce using rule 24 (stmt)


State 73

   28 exp: exp CROSS . exp

    TRUE           shift, and go to state 45
    FALSE          shift, and go to state 46
    ID             shift, and go to state 12
    INTLITERAL     shift, and go to state 47
    STRINGLITERAL  shift, and go to state 48
    DEREF          shift, and go to state 34
    LPAREN         shift, and go to state 49
    DASH           shift, and go to state 51
    NOT            shift, and go to state 52

    exp     go to state 96
    term    go to state 54
    fncall  go to state 55
    loc     go to state 56
    id      go to state 42


State 74

   29 exp: exp DASH . exp

    TRUE           shift, and go to state 45
    FALSE          shift, and go to state 46
    ID             shift, and go to state 12
    INTLITERAL     shift, and go to state 47
    STRINGLITERAL  shift, and go to state 48
    DEREF          shift, and go to state 34
    LPAREN         shift, and go to state 49
    DASH           shift, and go to state 51
    NOT            shift, and go to state 52

    exp     go to state 97
    term    go to state 54
    fncall  go to state 55
    loc     go to state 56
    id      go to state 42


State 75

   30 exp: exp STAR . exp

    TRUE           shift, and go to state 45
    FALSE          shift, and go to state 46
    ID             shift, and go to state 12
    INTLITERAL     shift, and go to state 47
    STRINGLITERAL  shift, and go to state 48
    DEREF          shift, and go to state 34
    LPAREN         shift, and go to state 49
    DASH           shift, and go to state 51
    NOT            shift, and go to state 52

    exp     go to state 98
    term    go to state 54
    fncall  go to state 55
    loc     go to state 56
    id      go to state 42


State 76

   31 exp: exp SLASH . exp

    TRUE           shift, and go to state 45
    FALSE          shift, and go to state 46
    ID             shift, and go to state 12
    INTLITERAL     shift, and go to state 47
    STRINGLITERAL  shift, and go to state 48
    DEREF          shift, and go to state 34
    LPAREN         shift, and go to state 49
    DASH           shift, and go to state 51
    NOT            shift, and go to state 52

    exp     go to state 99
    term    go to state 54
    fncall  go to state 55
    loc     go to state 56
    id      go to state 42


State 77

   33 exp: exp AND . exp

    TRUE           shift, and go to state 45
    FALSE          shift, and go to state 46
    ID             shift, and go to state 12
    INTLITERAL     shift, and go to state 47
    STRINGLITERAL  shift, and go to state 48
    DEREF          shift, and go to state 34
    LPAREN         shift, and go to state 49
    DASH           shift, and go to state 51
    NOT            shift, and go to state 52

    exp     go to state 100
    term    go to state 54
    fncall  go to state 55
    loc     go to state 56
    id      go to state 42


State 78

   34 exp: exp OR . exp

    TRUE           shift, and go to state 45
    FALSE          shift, and go to state 46
    ID             shift, and go to state 12
    INTLITERAL     shift, and go to state 47
    STRINGLITERAL  shift, and go to state 48
    DEREF          shift, and go to state 34
    LPAREN         shift, and go to state 49
    DASH           shift, and go to state 51
    NOT            shift, and go to state 52

    exp     go to state 101
    term    go to state 54
    fncall  go to state 55
    loc     go to state 56
    id      go to state 42


State 79

   35 exp: exp EQUALS . exp

    TRUE           shift, and go to state 45
    FALSE          shift, and go to state 46
    ID             shift, and go to state 12
    INTLITERAL     shift, and go to state 47
    STRINGLITERAL  shift, and go to state 48
    DEREF          shift, and go to state 34
    LPAREN         shift, and go to state 49
    DASH           shift, and go to state 51
    NOT            shift, and go to state 52

    exp     go to state 102
    term    go to state 54
    fncall  go to state 55
    loc     go to state 56
    id      go to state 42


State 80

   36 exp: exp NOTEQUALS . exp

    TRUE           shift, and go to state 45
    FALSE          shift, and go to state 46
    ID             shift, and go to state 12
    INTLITERAL     shift, and go to state 47
    STRINGLITERAL  shift, and go to state 48
    DEREF          shift, and go to state 34
    LPAREN         shift, and go to state 49
    DASH           shift, and go to state 51
    NOT            shift, and go to state 52

    exp     go to state 103
    term    go to state 54
    fncall  go to state 55
    loc     go to state 56
    id      go to state 42


State 81

   37 exp: exp LESS . exp

    TRUE           shift, and go to state 45
    FALSE          shift, and go to state 46
    ID             shift, and go to state 12
    INTLITERAL     shift, and go to state 47
    STRINGLITERAL  shift, and go to state 48
    DEREF          shift, and go to state 34
    LPAREN         shift, and go to state 49
    DASH           shift, and go to state 51
    NOT            shift, and go to state 52

    exp     go to state 104
    term    go to state 54
    fncall  go to state 55
    loc     go to state 56
    id      go to state 42


State 82

   38 exp: exp GREATER . exp

    TRUE           shift, and go to state 45
    FALSE          shift, and go to state 46
    ID             shift, and go to state 12
    INTLITERAL     shift, and go to state 47
    STRINGLITERAL  shift, and go to state 48
    DEREF          shift, and go to state 34
    LPAREN         shift, and go to state 49
    DASH           shift, and go to state 51
    NOT            shift, and go to state 52

    exp     go to state 105
    term    go to state 54
    fncall  go to state 55
    loc     go to state 56
    id      go to state 42


State 83

   39 exp: exp LESSEQ . exp

    TRUE           shift, and go to state 45
    FALSE          shift, and go to state 46
    ID             shift, and go to state 12
    INTLITERAL     shift, and go to state 47
    STRINGLITERAL  shift, and go to state 48
    DEREF          shift, and go to state 34
    LPAREN         shift, and go to state 49
    DASH           shift, and go to state 51
    NOT            shift, and go to state 52

    exp     go to state 106
    term    go to state 54
    fncall  go to state 55
    loc     go to state 56
    id      go to state 42


State 84

   40 exp: exp GREATEREQ . exp

    TRUE           shift, and go to state 45
    FALSE          shift, and go to state 46
    ID             shift, and go to state 12
    INTLITERAL     shift, and go to state 47
    STRINGLITERAL  shift, and go to state 48
    DEREF          shift, and go to state 34
    LPAREN         shift, and go to state 49
    DASH           shift, and go to state 51
    NOT            shift, and go to state 52

    exp     go to state 107
    term    go to state 54
    fncall  go to state 55
    loc     go to state 56
    id      go to state 42


State 85

   20 stmt: WRITE exp SEMICOLON .

    $default  reduce using rule 20 (stmt)


State 86

   19 stmt: READ loc SEMICOLON .

    $default  reduce using rule 19 (stmt)


State 87

   17 stmt: loc CROSSCROSS SEMICOLON .

    $default  reduce using rule 17 (stmt)


State 88

   18 stmt: loc DASHDASH SEMICOLON .

    $default  reduce using rule 18 (stmt)


State 89

   27 assignExp: loc ASSIGN exp .
   28 exp: exp . CROSS exp
   29    | exp . DASH exp
   30    | exp . STAR exp
   31    | exp . SLASH exp
   33    | exp . AND exp
   34    | exp . OR exp
   35    | exp . EQUALS exp
   36    | exp . NOTEQUALS exp
   37    | exp . LESS exp
   38    | exp . GREATER exp
   39    | exp . LESSEQ exp
   40    | exp . GREATEREQ exp

    CROSS      shift, and go to state 73
    DASH       shift, and go to state 74
    STAR       shift, and go to state 75
    SLASH      shift, and go to state 76
    AND        shift, and go to state 77
    OR         shift, and go to state 78
    EQUALS     shift, and go to state 79
    NOTEQUALS  shift, and go to state 80
    LESS       shift, and go to state 81
    GREATER    shift, and go to state 82
    LESSEQ     shift, and go to state 83
    GREATEREQ  shift, and go to state 84

    $default  reduce using rule 27 (assignExp)


State 90

   50 fncall: id LPAREN RPAREN .

    $default  reduce using rule 50 (fncall)


State 91

   28 exp: exp . CROSS exp
   29    | exp . DASH exp
   30    | exp . STAR exp
   31    | exp . SLASH exp
   33    | exp . AND exp
   34    | exp . OR exp
   35    | exp . EQUALS exp
   36    | exp . NOTEQUALS exp
   37    | exp . LESS exp
   38    | exp . GREATER exp
   39    | exp . LESSEQ exp
   40    | exp . GREATEREQ exp
   52 actualList: exp .

    CROSS      shift, and go to state 73
    DASH       shift, and go to state 74
    STAR       shift, and go to state 75
    SLASH      shift, and go to state 76
    AND        shift, and go to state 77
    OR         shift, and go to state 78
    EQUALS     shift, and go to state 79
    NOTEQUALS  shift, and go to state 80
    LESS       shift, and go to state 81
    GREATER    shift, and go to state 82
    LESSEQ     shift, and go to state 83
    GREATEREQ  shift, and go to state 84

    $default  reduce using rule 52 (actualList)


State 92

   51 fncall: id LPAREN actualList . RPAREN
   53 actualList: actualList . COMMA exp

    RPAREN  shift, and go to state 108
    COMMA   shift, and go to state 109


State 93

   21 stmt: IF LPAREN exp RPAREN . LCURLY declList stmtList RCURLY
   22     | IF LPAREN exp RPAREN . LCURLY declList stmtList RCURLY ELSE LCURLY declList stmtList RCURLY

    LCURLY  shift, and go to state 110


State 94

   23 stmt: WHILE LPAREN exp RPAREN . LCURLY declList stmtList RCURLY

    LCURLY  shift, and go to state 111


State 95

   48 term: LPAREN exp RPAREN .

    $default  reduce using rule 48 (term)


State 96

   28 exp: exp . CROSS exp
   28    | exp CROSS exp .
   29    | exp . DASH exp
   30    | exp . STAR exp
   31    | exp . SLASH exp
   33    | exp . AND exp
   34    | exp . OR exp
   35    | exp . EQUALS exp
   36    | exp . NOTEQUALS exp
   37    | exp . LESS exp
   38    | exp . GREATER exp
   39    | exp . LESSEQ exp
   40    | exp . GREATEREQ exp

    STAR   shift, and go to state 75
    SLASH  shift, and go to state 76

    $default  reduce using rule 28 (exp)


State 97

   28 exp: exp . CROSS exp
   29    | exp . DASH exp
   29    | exp DASH exp .
   30    | exp . STAR exp
   31    | exp . SLASH exp
   33    | exp . AND exp
   34    | exp . OR exp
   35    | exp . EQUALS exp
   36    | exp . NOTEQUALS exp
   37    | exp . LESS exp
   38    | exp . GREATER exp
   39    | exp . LESSEQ exp
   40    | exp . GREATEREQ exp

    STAR   shift, and go to state 75
    SLASH  shift, and go to state 76

    $default  reduce using rule 29 (exp)


State 98

   28 exp: exp . CROSS exp
   29    | exp . DASH exp
   30    | exp . STAR exp
   30    | exp STAR exp .
   31    | exp . SLASH exp
   33    | exp . AND exp
   34    | exp . OR exp
   35    | exp . EQUALS exp
   36    | exp . NOTEQUALS exp
   37    | exp . LESS exp
   38    | exp . GREATER exp
   39    | exp . LESSEQ exp
   40    | exp . GREATEREQ exp

    $default  reduce using rule 30 (exp)


State 99

   28 exp: exp . CROSS exp
   29    | exp . DASH exp
   30    | exp . STAR exp
   31    | exp . SLASH exp
   31    | exp SLASH exp .
   33    | exp . AND exp
   34    | exp . OR exp
   35    | exp . EQUALS exp
   36    | exp . NOTEQUALS exp
   37    | exp . LESS exp
   38    | exp . GREATER exp
   39    | exp . LESSEQ exp
   40    | exp . GREATEREQ exp

    $default  reduce using rule 31 (exp)


State 100

   28 exp: exp . CROSS exp
   29    | exp . DASH exp
   30    | exp . STAR exp
   31    | exp . SLASH exp
   33    | exp . AND exp
   33    | exp AND exp .
   34    | exp . OR exp
   35    | exp . EQUALS exp
   36    | exp . NOTEQUALS exp
   37    | exp . LESS exp
   38    | exp . GREATER exp
   39    | exp . LESSEQ exp
   40    | exp . GREATEREQ exp

    CROSS      shift, and go to state 73
    DASH       shift, and go to state 74
    STAR       shift, and go to state 75
    SLASH      shift, and go to state 76
    EQUALS     shift, and go to state 79
    NOTEQUALS  shift, and go to state 80
    LESS       shift, and go to state 81
    GREATER    shift, and go to state 82
    LESSEQ     shift, and go to state 83
    GREATEREQ  shift, and go to state 84

    $default  reduce using rule 33 (exp)


State 101

   28 exp: exp . CROSS exp
   29    | exp . DASH exp
   30    | exp . STAR exp
   31    | exp . SLASH exp
   33    | exp . AND exp
   34    | exp . OR exp
   34    | exp OR exp .
   35    | exp . EQUALS exp
   36    | exp . NOTEQUALS exp
   37    | exp . LESS exp
   38    | exp . GREATER exp
   39    | exp . LESSEQ exp
   40    | exp . GREATEREQ exp

    CROSS      shift, and go to state 73
    DASH       shift, and go to state 74
    STAR       shift, and go to state 75
    SLASH      shift, and go to state 76
    AND        shift, and go to state 77
    EQUALS     shift, and go to state 79
    NOTEQUALS  shift, and go to state 80
    LESS       shift, and go to state 81
    GREATER    shift, and go to state 82
    LESSEQ     shift, and go to state 83
    GREATEREQ  shift, and go to state 84

    $default  reduce using rule 34 (exp)


State 102

   28 exp: exp . CROSS exp
   29    | exp . DASH exp
   30    | exp . STAR exp
   31    | exp . SLASH exp
   33    | exp . AND exp
   34    | exp . OR exp
   35    | exp . EQUALS exp
   35    | exp EQUALS exp .
   36    | exp . NOTEQUALS exp
   37    | exp . LESS exp
   38    | exp . GREATER exp
   39    | exp . LESSEQ exp
   40    | exp . GREATEREQ exp

    CROSS      shift, and go to state 73
    DASH       shift, and go to state 74
    STAR       shift, and go to state 75
    SLASH      shift, and go to state 76
    NOTEQUALS  shift, and go to state 80

    EQUALS  error (nonassociative)

    $default  reduce using rule 35 (exp)


State 103

   28 exp: exp . CROSS exp
   29    | exp . DASH exp
   30    | exp . STAR exp
   31    | exp . SLASH exp
   33    | exp . AND exp
   34    | exp . OR exp
   35    | exp . EQUALS exp
   36    | exp . NOTEQUALS exp
   36    | exp NOTEQUALS exp .
   37    | exp . LESS exp
   38    | exp . GREATER exp
   39    | exp . LESSEQ exp
   40    | exp . GREATEREQ exp

    CROSS  shift, and go to state 73
    DASH   shift, and go to state 74
    STAR   shift, and go to state 75
    SLASH  shift, and go to state 76

    NOTEQUALS  error (nonassociative)

    $default  reduce using rule 36 (exp)


State 104

   28 exp: exp . CROSS exp
   29    | exp . DASH exp
   30    | exp . STAR exp
   31    | exp . SLASH exp
   33    | exp . AND exp
   34    | exp . OR exp
   35    | exp . EQUALS exp
   36    | exp . NOTEQUALS exp
   37    | exp . LESS exp
   37    | exp LESS exp .
   38    | exp . GREATER exp
   39    | exp . LESSEQ exp
   40    | exp . GREATEREQ exp

    CROSS      shift, and go to state 73
    DASH       shift, and go to state 74
    STAR       shift, and go to state 75
    SLASH      shift, and go to state 76
    EQUALS     shift, and go to state 79
    NOTEQUALS  shift, and go to state 80
    GREATER    shift, and go to state 82
    LESSEQ     shift, and go to state 83
    GREATEREQ  shift, and go to state 84

    LESS  error (nonassociative)

    $default  reduce using rule 37 (exp)


State 105

   28 exp: exp . CROSS exp
   29    | exp . DASH exp
   30    | exp . STAR exp
   31    | exp . SLASH exp
   33    | exp . AND exp
   34    | exp . OR exp
   35    | exp . EQUALS exp
   36    | exp . NOTEQUALS exp
   37    | exp . LESS exp
   38    | exp . GREATER exp
   38    | exp GREATER exp .
   39    | exp . LESSEQ exp
   40    | exp . GREATEREQ exp

    CROSS      shift, and go to state 73
    DASH       shift, and go to state 74
    STAR       shift, and go to state 75
    SLASH      shift, and go to state 76
    EQUALS     shift, and go to state 79
    NOTEQUALS  shift, and go to state 80
    LESSEQ     shift, and go to state 83
    GREATEREQ  shift, and go to state 84

    GREATER  error (nonassociative)

    $default  reduce using rule 38 (exp)


State 106

   28 exp: exp . CROSS exp
   29    | exp . DASH exp
   30    | exp . STAR exp
   31    | exp . SLASH exp
   33    | exp . AND exp
   34    | exp . OR exp
   35    | exp . EQUALS exp
   36    | exp . NOTEQUALS exp
   37    | exp . LESS exp
   38    | exp . GREATER exp
   39    | exp . LESSEQ exp
   39    | exp LESSEQ exp .
   40    | exp . GREATEREQ exp

    CROSS      shift, and go to state 73
    DASH       shift, and go to state 74
    STAR       shift, and go to state 75
    SLASH      shift, and go to state 76
    EQUALS     shift, and go to state 79
    NOTEQUALS  shift, and go to state 80
    GREATEREQ  shift, and go to state 84

    LESSEQ  error (nonassociative)

    $default  reduce using rule 39 (exp)


State 107

   28 exp: exp . CROSS exp
   29    | exp . DASH exp
   30    | exp . STAR exp
   31    | exp . SLASH exp
   33    | exp . AND exp
   34    | exp . OR exp
   35    | exp . EQUALS exp
   36    | exp . NOTEQUALS exp
   37    | exp . LESS exp
   38    | exp . GREATER exp
   39    | exp . LESSEQ exp
   40    | exp . GREATEREQ exp
   40    | exp GREATEREQ exp .

    CROSS      shift, and go to state 73
    DASH       shift, and go to state 74
    STAR       shift, and go to state 75
    SLASH      shift, and go to state 76
    EQUALS     shift, and go to state 79
    NOTEQUALS  shift, and go to state 80

    GREATEREQ  error (nonassociative)

    $default  reduce using rule 40 (exp)


State 108

   51 fncall: id LPAREN actualList RPAREN .

    $default  reduce using rule 51 (fncall)


State 109

   53 actualList: actualList COMMA . exp

    TRUE           shift, and go to state 45
    FALSE          shift, and go to state 46
    ID             shift, and go to state 12
    INTLITERAL     shift, and go to state 47
    STRINGLITERAL  shift, and go to state 48
    DEREF          shift, and go to state 34
    LPAREN         shift, and go to state 49
    DASH           shift, and go to state 51
    NOT            shift, and go to state 52

    exp     go to state 112
    term    go to state 54
    fncall  go to state 55
    loc     go to state 56
    id      go to state 42


State 110

   21 stmt: IF LPAREN exp RPAREN LCURLY . declList stmtList RCURLY
   22     | IF LPAREN exp RPAREN LCURLY . declList stmtList RCURLY ELSE LCURLY declList stmtList RCURLY

    $default  reduce using rule 3 (declList)

    declList  go to state 113


State 111

   23 stmt: WHILE LPAREN exp RPAREN LCURLY . declList stmtList RCURLY

    $default  reduce using rule 3 (declList)

    declList  go to state 114


State 112

   28 exp: exp . CROSS exp
   29    | exp . DASH exp
   30    | exp . STAR exp
   31    | exp . SLASH exp
   33    | exp . AND exp
   34    | exp . OR exp
   35    | exp . EQUALS exp
   36    | exp . NOTEQUALS exp
   37    | exp . LESS exp
   38    | exp . GREATER exp
   39    | exp . LESSEQ exp
   40    | exp . GREATEREQ exp
   53 actualList: actualList COMMA exp .

    CROSS      shift, and go to state 73
    DASH       shift, and go to state 74
    STAR       shift, and go to state 75
    SLASH      shift, and go to state 76
    AND        shift, and go to state 77
    OR         shift, and go to state 78
    EQUALS     shift, and go to state 79
    NOTEQUALS  shift, and go to state 80
    LESS       shift, and go to state 81
    GREATER    shift, and go to state 82
    LESSEQ     shift, and go to state 83
    GREATEREQ  shift, and go to state 84

    $default  reduce using rule 53 (actualList)


State 113

    2 declList: declList . decl
   21 stmt: IF LPAREN exp RPAREN LCURLY declList . stmtList RCURLY
   22     | IF LPAREN exp RPAREN LCURLY declList . stmtList RCURLY ELSE LCURLY declList stmtList RCURLY

    BOOL  shift, and go to state 4
    INT   shift, and go to state 5
    VOID  shift, and go to state 6

    $default  reduce using rule 15 (stmtList)

    decl      go to state 7
    varDecl   go to state 8
    fnDecl    go to state 9
    stmtList  go to state 115
    type      go to state 10
    primtype  go to state 11


State 114

    2 declList: declList . decl
   23 stmt: WHILE LPAREN exp RPAREN LCURLY declList . stmtList RCURLY

    BOOL  shift, and go to state 4
    INT   shift, and go to state 5
    VOID  shift, and go to state 6

    $default  reduce using rule 15 (stmtList)

    decl      go to state 7
    varDecl   go to state 8
    fnDecl    go to state 9
    stmtList  go to state 116
    type      go to state 10
    primtype  go to state 11


State 115

   14 stmtList: stmtList . stmt
   21 stmt: IF LPAREN exp RPAREN LCURLY declList stmtList . RCURLY
   22     | IF LPAREN exp RPAREN LCURLY declList stmtList . RCURLY ELSE LCURLY declList stmtList RCURLY

    IF      shift, and go to state 31
    WHILE   shift, and go to state 32
    RETURN  shift, and go to state 33
    ID      shift, and go to state 12
    DEREF   shift, and go to state 34
    RCURLY  shift, and go to state 117
    WRITE   shift, and go to state 36
    READ    shift, and go to state 37

    stmt       go to state 38
    assignExp  go to state 39
    fncall     go to state 40
    loc        go to state 41
    id         go to state 42


State 116

   14 stmtList: stmtList . stmt
   23 stmt: WHILE LPAREN exp RPAREN LCURLY declList stmtList . RCURLY

    IF      shift, and go to state 31
    WHILE   shift, and go to state 32
    RETURN  shift, and go to state 33
    ID      shift, and go to state 12
    DEREF   shift, and go to state 34
    RCURLY  shift, and go to state 118
    WRITE   shift, and go to state 36
    READ    shift, and go to state 37

    stmt       go to state 38
    assignExp  go to state 39
    fncall     go to state 40
    loc        go to state 41
    id         go to state 42


State 117

   21 stmt: IF LPAREN exp RPAREN LCURLY declList stmtList RCURLY .
   22     | IF LPAREN exp RPAREN LCURLY declList stmtList RCURLY . ELSE LCURLY declList stmtList RCURLY

    ELSE  shift, and go to state 119

    $default  reduce using rule 21 (stmt)


State 118

   23 stmt: WHILE LPAREN exp RPAREN LCURLY declList stmtList RCURLY .

    $default  reduce using rule 23 (stmt)


State 119

   22 stmt: IF LPAREN exp RPAREN LCURLY declList stmtList RCURLY ELSE . LCURLY declList stmtList RCURLY

    LCURLY  shift, and go to state 120


State 120

   22 stmt: IF LPAREN exp RPAREN LCURLY declList stmtList RCURLY ELSE LCURLY . declList stmtList RCURLY

    $default  reduce using rule 3 (declList)

    declList  go to state 121


State 121

    2 declList: declList . decl
   22 stmt: IF LPAREN exp RPAREN LCURLY declList stmtList RCURLY ELSE LCURLY declList . stmtList RCURLY

    BOOL  shift, and go to state 4
    INT   shift, and go to state 5
    VOID  shift, and go to state 6

    $default  reduce using rule 15 (stmtList)

    decl      go to state 7
    varDecl   go to state 8
    fnDecl    go to state 9
    stmtList  go to state 122
    type      go to state 10
    primtype  go to state 11


State 122

   14 stmtList: stmtList . stmt
   22 stmt: IF LPAREN exp RPAREN LCURLY declList stmtList RCURLY ELSE LCURLY declList stmtList . RCURLY

    IF      shift, and go to state 31
    WHILE   shift, and go to state 32
    RETURN  shift, and go to state 33
    ID      shift, and go to state 12
    DEREF   shift, and go to state 34
    RCURLY  shift, and go to state 123
    WRITE   shift, and go to state 36
    READ    shift, and go to state 37

    stmt       go to state 38
    assignExp  go to state 39
    fncall     go to state 40
    loc        go to state 41
    id         go to state 42


State 123

   22 stmt: IF LPAREN exp RPAREN LCURLY declList stmtList RCURLY ELSE LCURLY declList stmtList RCURLY .

    $default  reduce using rule 22 (stmt)
